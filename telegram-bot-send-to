#!/usr/bin/perl

# Simple client to let a Telegram Bot send a Telegram User a Message
#
# Meant to let monitoring systems alert users via Telegram.

# Copyright (C) 2019  Axel Beckert <abe@debian.org>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

use strict;
use warnings;

use Mojo::UserAgent;
use Mojo::File;
use Mojo::Util qw(url_escape);

# Paths
my $token_file = '/etc/telegram-bot-send-to.token';

# Commandline parsing
die 'No recipients!' unless exists($ARGV[0]) && defined($ARGV[0]);
die "$token_file doesn't exist. Please create it and save the bot token in it."
    unless (-e $token_file);
die "$token_file exists, but is not readable for this script."
    unless (-r $token_file);

# Normalize the token
my $token = Mojo::File->new($token_file)->slurp;
$token =~ s/^\s+|\s+$//gs;

my $ua = Mojo::UserAgent->new;

local $/ = undef; # slurp mode
my $msg = <STDIN>;
die 'Empty message!' if $msg eq '';

foreach my $recipient (split(/,/, $ARGV[0])) {
    if (length($msg) > 4096) {
	my @msgchunks = ( $msg =~ m(.{1,4096})gs );
	foreach my $msgchunk (@msgchunks) {
	    sendMessageTo($msgchunk, $recipient);
	}
    } else {
	sendMessageTo($msg, $recipient);
    }
}

# Functions
sub sendMessageTo {
    my ($msg, $rcp) = map { url_escape($_) } @_;
    my $tx = $ua->get("https://api.telegram.org/bot$token/sendMessage?parse_mode=html&chat_id=$rcp&text=$msg");
    my $res = $tx->result;
    if ($res->is_error) { say STDERR $res->code.' '.$res->message."\n".$res->body }
}

